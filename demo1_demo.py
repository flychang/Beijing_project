# -*- coding: utf-8 -*-
import cv2
# Form implementation generated from reading ui file 'demo1_demo.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import Qt

class Ui_mainWindow(object):
    def setupUi(self, mainWindow):
        mainWindow.setObjectName("mainWindow")
        mainWindow.resize(800, 459)
        mainWindow.setMinimumSize(QtCore.QSize(800, 459))
        mainWindow.setMaximumSize(QtCore.QSize(800, 459))
        self.centralwidget = QtWidgets.QWidget(mainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setSpacing(0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame.sizePolicy().hasHeightForWidth())
        self.frame.setSizePolicy(sizePolicy)
        self.frame.setStyleSheet("background-color: rgb(170, 185, 238);")
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.frame)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setSpacing(0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.frame_3 = QtWidgets.QFrame(self.frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(2)
        sizePolicy.setHeightForWidth(self.frame_3.sizePolicy().hasHeightForWidth())
        self.frame_3.setSizePolicy(sizePolicy)
        self.frame_3.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_3.setObjectName("frame_3")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.frame_3)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.label = QtWidgets.QLabel(self.frame_3)
        self.label.setStyleSheet("font: 30pt \"Cascadia Code\";")
        self.label.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignHCenter)
        self.label.setObjectName("label")
        self.horizontalLayout_2.addWidget(self.label)
        self.verticalLayout.addWidget(self.frame_3)
        self.frame_4 = QtWidgets.QFrame(self.frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(4)
        sizePolicy.setHeightForWidth(self.frame_4.sizePolicy().hasHeightForWidth())
        self.frame_4.setSizePolicy(sizePolicy)
        self.frame_4.setStyleSheet("QPushButton:focus{\n"
"    background-color: rgb(235, 238, 251);\n"
"}\n"
"\n"
"QPushButton:pressed{\n"
"    background-color: rgb(255, 255, 255);\n"
"    border-style: inset;\n"
"}\n"
"\n"
"QPushButton:hover{\n"
"background-color:rgb(235, 238, 251); color: black;\n"
"}\n"
"\n"
"")
        self.frame_4.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_4.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_4.setObjectName("frame_4")
        self.pushButton = QtWidgets.QPushButton(self.frame_4)
        self.pushButton.setGeometry(QtCore.QRect(0, 28, 201, 41))
        self.pushButton.setStyleSheet("font: 16pt \"幼圆\";\n"
"")
        self.pushButton.setObjectName("pushButton")
        self.pushButton_2 = QtWidgets.QPushButton(self.frame_4)
        self.pushButton_2.setGeometry(QtCore.QRect(0, 87, 201, 41))
        self.pushButton_2.setStyleSheet("font: 16pt \"幼圆\";\n"
"")
        self.pushButton_2.setObjectName("pushButton_2")
        self.verticalLayout.addWidget(self.frame_4)
        self.frame_5 = QtWidgets.QFrame(self.frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(5)
        sizePolicy.setHeightForWidth(self.frame_5.sizePolicy().hasHeightForWidth())
        self.frame_5.setSizePolicy(sizePolicy)
        self.frame_5.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_5.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_5.setObjectName("frame_5")
        self.verticalLayout.addWidget(self.frame_5)
        self.horizontalLayout.addWidget(self.frame)
        self.frame_2 = QtWidgets.QFrame(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(3)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame_2.sizePolicy().hasHeightForWidth())
        self.frame_2.setSizePolicy(sizePolicy)
        self.frame_2.setStyleSheet("background-color: rgb(235, 238, 251);")
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.frame_2)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.stackedWidget = QtWidgets.QStackedWidget(self.frame_2)
        self.stackedWidget.setStyleSheet("background-color: rgb(235, 238, 251);")
        self.stackedWidget.setObjectName("stackedWidget")
        self.page = QtWidgets.QWidget()
        self.page.setObjectName("page")
        self.comboBox = QtWidgets.QComboBox(self.page)
        self.comboBox.setGeometry(QtCore.QRect(100, 90, 371, 41))
        self.comboBox.setStyleSheet("font: 14pt \"黑体\";")
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.label_2 = QtWidgets.QLabel(self.page)
        self.label_2.setGeometry(QtCore.QRect(20, 20, 221, 51))
        self.label_2.setStyleSheet("font: 18pt \"黑体\";")
        self.label_2.setObjectName("label_2")
        self.pushButton_3 = QtWidgets.QPushButton(self.page)
        self.pushButton_3.setGeometry(QtCore.QRect(10, 280, 131, 41))
        self.pushButton_3.setStyleSheet("font: 14pt \"黑体\";")
        self.pushButton_3.setObjectName("pushButton_3")
        self.pushButton_4 = QtWidgets.QPushButton(self.page)
        self.pushButton_4.setGeometry(QtCore.QRect(390, 360, 171, 41))
        self.pushButton_4.setStyleSheet("font: 16pt \"黑体\";")
        self.pushButton_4.setObjectName("pushButton_4")
        self.pushButton_5 = QtWidgets.QPushButton(self.page)
        self.pushButton_5.setGeometry(QtCore.QRect(160, 290, 371, 21))
        self.pushButton_5.setText("")
        self.pushButton_5.setObjectName("pushButton_5")
        self.pushButton_6 = QtWidgets.QPushButton(self.page)
        self.pushButton_6.setGeometry(QtCore.QRect(160, 230, 371, 21))
        self.pushButton_6.setText("")
        self.pushButton_6.setObjectName("pushButton_6")
        self.pushButton_7 = QtWidgets.QPushButton(self.page)
        self.pushButton_7.setGeometry(QtCore.QRect(10, 220, 131, 41))
        self.pushButton_7.setStyleSheet("font: 14pt \"黑体\";\n"
"")
        self.pushButton_7.setObjectName("pushButton_7")
        self.stackedWidget.addWidget(self.page)
        self.page_2 = QtWidgets.QWidget()
        self.page_2.setObjectName("page_2")
        self.label_3 = QtWidgets.QLabel(self.page_2)
        self.label_3.setGeometry(QtCore.QRect(0, 0, 591, 461))
        self.label_3.setCursor(QtGui.QCursor(QtCore.Qt.CrossCursor))
        self.label_3.setObjectName("label_3")
        #
        self.label_4 = QtWidgets.QLabel(self.page_2)
        self.label_4.setStyleSheet("background-color:transparent;")  # 设置背景透明
        self.label_4.setAttribute(Qt.WA_TranslucentBackground)  # 启用透明度特性
        self.label_4.setGeometry(QtCore.QRect(0, 0, 591, 461))
        self.label_4.setCursor(QtGui.QCursor(QtCore.Qt.CrossCursor))
        self.label_4.setObjectName("label_4")
        self.label_4.raise_()
        # self.label_3.raise_()
        self.stackedWidget.addWidget(self.page_2)
        self.horizontalLayout_3.addWidget(self.stackedWidget)
        self.horizontalLayout.addWidget(self.frame_2)
        mainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(mainWindow)
        self.stackedWidget.setCurrentIndex(1)
        QtCore.QMetaObject.connectSlotsByName(mainWindow)

    def retranslateUi(self, mainWindow):
        _translate = QtCore.QCoreApplication.translate
        mainWindow.setWindowTitle(_translate("mainWindow", "钎焊超声图像缺陷分析1.0"))
        self.label.setText(_translate("mainWindow", "SUT"))
        self.pushButton.setText(_translate("mainWindow", "检测"))
        self.pushButton_2.setText(_translate("mainWindow", "检测结果可视化"))
        self.comboBox.setItemText(0, _translate("mainWindow", "LSR16C-1100-上冷板分组件-密封座"))
        self.comboBox.setItemText(1, _translate("mainWindow", "LSR16C-1100-上冷板分组件-外围钎焊"))
        self.comboBox.setItemText(2, _translate("mainWindow", "LSR16C-2000-下冷板分组件-外围钎焊"))
        self.comboBox.setItemText(3, _translate("mainWindow", "IGBT散热器-正方形"))
        self.comboBox.setItemText(4, _translate("mainWindow", "IGBT散热器-八角形"))
        self.label_2.setText(_translate("mainWindow", "选择要检测的器件"))
        self.pushButton_3.setText(_translate("mainWindow", "导入图片"))
        self.pushButton_4.setText(_translate("mainWindow", "一键检测"))
        self.pushButton_7.setText(_translate("mainWindow", "结果存放"))
      

        self.pushButton.clicked.connect(lambda: self.stackedWidget.setCurrentIndex(0))
        self.pushButton_2.clicked.connect(lambda: self.stackedWidget.setCurrentIndex(1))

        self.pushButton_3.clicked.connect(self.msg)
        self.pushButton_7.clicked.connect(self.msg2)
        self.pushButton_4.clicked.connect(self.Pushbutton4)

    def msg(self):
        num = 0
        self.imgName, imgType = QtWidgets.QFileDialog.getOpenFileName(None, "导入图片", "./", "*.png;*.tif;")
        # imgName, imgType = QtWidgets.QFileDialog.getOpenFileName(None, "选取文件", "./","All Files (*);;Text Files (*.txt)")
        self.pushButton_5.setText(self.imgName)
        if self.imgName == "":
            return
        file_path = self.imgName
        # img = Image.open(file_path)
        img = cv2.imread(file_path, 1)
        row, col, s = img.shape  # 大小/尺寸
        # w = col  # 图片的宽
        # h = row  # 图片的高
        # print(w,h,f)
        img_rate = float(col / row)  # 图片长宽比
        lable_rate = float(self.label_3.width() / self.label_3.height())  # label长宽比

        if lable_rate > img_rate:
            jpg = QtGui.QPixmap(self.imgName).scaled(self.label_3.height() / row * col, self.label_3.height())
        else:
            jpg = QtGui.QPixmap(self.imgName).scaled(self.label_3.width(), self.label_3.width() / col * row)
        print(self.label_3.width(), self.label_3.height())  # 控制台输出label长度和宽度
        print(col, row)  # 控制台输出图片的长度和宽度
        pixmap = QtGui.QPixmap(jpg)
        painter = QtGui.QPainter(pixmap)
        # 设置线条颜色和宽度
        pen = QtGui.QPen(QtGui.QColor(255, 0, 0))
        pen.setWidth(3)
        painter.setPen(pen)
        # self.mouseMoveEvent()
        # 在 QPixmap 上画线
        painter.drawLine(0, 0, 100, 100)

        # 结束绘制
        painter.end()
        # 将 QPixmap 设置为 self.label_3 的 pixmap
        self.label_3.setPixmap(pixmap)
        # self.label_3.setPixmap(jpg)                                         #在label_3处展示等比例缩放后的图片
        # self.mid(self,imgName)

        # 结果保存路径路径

    def msg2(self):
        self.directory2 = QtWidgets.QFileDialog.getExistingDirectory(None, "选取文件夹", "C:/")
        self.pushButton_6.setText(self.directory2)

        # 根据选择的器件返回不同值函数

    def Comboxreturn(self):
        data = self.comboBox.currentText()
        if data == "LSR16C-1100-上冷板分组件-密封座":
            a = 0
        elif data == "LSR16C-1100-上冷板分组件-外围钎焊":
            a = 1
        elif data == "LSR16C-2000-下冷板分组件-外围钎焊":
            a = 2
        elif data == "IGBT散热器-正方形":
            a = 3
        elif data == "IGBT散热器-八角形":
            a = 4
        return a

        # 判断是否设置文件夹、导入图片    返回后台检测器件型号

    def Pushbutton4(self):
        if self.imgName == "" or self.directory2 == "":
            msg_box = QtWidgets.QMessageBox(QtWidgets.QMessageBox.Information, '警告',
                                            '请先导入图片或设置结果存放的文件夹！')  # Information可替换为Warning、Critical其他提示框类型
            msg_box.exec_()
        else:
            a = self.Comboxreturn()
            print(a)
