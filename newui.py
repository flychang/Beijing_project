# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'jiemian4.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import Qt


class Ui_MainWindow(object):
    imgName = ""
    directory2 = ""
    pixmap = ""
    txtName = ""
    width = 0
    height = 0
    w_kong = (1900 - 400 - width) / 2
    h_kong = (1100 - height) / 2
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(2200, 1100)
        MainWindow.setMinimumSize(QtCore.QSize(2200, 1100))
        MainWindow.setMaximumSize(QtCore.QSize(2200, 1100))
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setGeometry(QtCore.QRect(-1, 0, 401, 1101))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame.sizePolicy().hasHeightForWidth())
        self.frame.setSizePolicy(sizePolicy)
        self.frame.setStyleSheet("background-color: rgb(170, 185, 238);")
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.label = QtWidgets.QLabel(self.frame)
        self.label.setGeometry(QtCore.QRect(0, 0, 401, 261))
        self.label.setStyleSheet("font: 72pt \"Algerian\";")
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.frame_2 = QtWidgets.QFrame(self.frame)
        self.frame_2.setGeometry(QtCore.QRect(-10, 280, 411, 431))
        self.frame_2.setStyleSheet("QPushButton:focus{\n"
"    background-color: rgb(235, 238, 251);\n"
"}\n"
"\n"
"QPushButton:pressed{\n"
"    background-color: rgb(255, 255, 255);\n"
"    border-style: inset;\n"
"}\n"
"\n"
"QPushButton:hover{\n"
"background-color:rgb(235, 238, 251); color: black;\n"
"}\n"
"\n"
"")
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.pushButton_jiance = QtWidgets.QPushButton(self.frame_2)
        self.pushButton_jiance.setGeometry(QtCore.QRect(0, 0, 411, 101))
        self.pushButton_jiance.setStyleSheet("font: 48pt \"黑体\";")
        self.pushButton_jiance.setObjectName("pushButton_jiance")
        self.pushButton_keshihua = QtWidgets.QPushButton(self.frame_2)
        self.pushButton_keshihua.setGeometry(QtCore.QRect(0, 270, 411, 111))
        self.pushButton_keshihua.setStyleSheet("font: 36pt \"黑体\";")
        self.pushButton_keshihua.setObjectName("pushButton_keshihua")
        self.pushButton_zhongjian = QtWidgets.QPushButton(self.frame_2)
        self.pushButton_zhongjian.setGeometry(QtCore.QRect(0, 130, 411, 111))
        self.pushButton_zhongjian.setStyleSheet("font: 36pt \"黑体\";")
        self.pushButton_zhongjian.setObjectName("pushButton_zhongjian")
        self.stackedWidget = QtWidgets.QStackedWidget(self.centralwidget)
        self.stackedWidget.setGeometry(QtCore.QRect(400, 0, 1501, 1101))
        self.stackedWidget.setStyleSheet("background-color: rgb(235, 238, 251);")
        self.stackedWidget.setObjectName("stackedWidget")
        self.page = QtWidgets.QWidget()
        self.page.setObjectName("page")
        self.label_2 = QtWidgets.QLabel(self.page)
        self.label_2.setGeometry(QtCore.QRect(110, 90, 971, 111))
        self.label_2.setStyleSheet("font: 48pt \"黑体\";")
        self.label_2.setObjectName("label_2")
        self.comboBox = QtWidgets.QComboBox(self.page)
        self.comboBox.setGeometry(QtCore.QRect(270, 260, 981, 91))
        self.comboBox.setStyleSheet("font: 36pt \"黑体\";\n"
"")
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.pushButton_1 = QtWidgets.QPushButton(self.page)
        self.pushButton_1.setGeometry(QtCore.QRect(80, 600, 251, 71))
        self.pushButton_1.setStyleSheet("font: 28pt \"黑体\";")
        self.pushButton_1.setObjectName("pushButton_1")
        self.pushButton_2 = QtWidgets.QPushButton(self.page)
        self.pushButton_2.setGeometry(QtCore.QRect(80, 690, 251, 71))
        self.pushButton_2.setStyleSheet("font: 28pt \"黑体\";")
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_3 = QtWidgets.QPushButton(self.page)
        self.pushButton_3.setGeometry(QtCore.QRect(80, 780, 251, 71))
        self.pushButton_3.setStyleSheet("font: 28pt \"黑体\";")
        self.pushButton_3.setObjectName("pushButton_3")
        self.pushButton_4 = QtWidgets.QPushButton(self.page)
        self.pushButton_4.setGeometry(QtCore.QRect(360, 610, 961, 51))
        self.pushButton_4.setStyleSheet("font: 18pt \"黑体\";")
        self.pushButton_4.setText("")
        self.pushButton_4.setObjectName("pushButton_4")
        self.pushButton_5 = QtWidgets.QPushButton(self.page)
        self.pushButton_5.setGeometry(QtCore.QRect(360, 700, 961, 51))
        self.pushButton_5.setStyleSheet("font: 18pt \"黑体\";")
        self.pushButton_5.setText("")
        self.pushButton_5.setObjectName("pushButton_5")
        self.pushButton_6 = QtWidgets.QPushButton(self.page)
        self.pushButton_6.setGeometry(QtCore.QRect(360, 790, 961, 51))
        self.pushButton_6.setStyleSheet("font: 18pt \"黑体\";")
        self.pushButton_6.setText("")
        self.pushButton_6.setObjectName("pushButton_6")
        self.pushButton = QtWidgets.QPushButton(self.page)
        self.pushButton.setGeometry(QtCore.QRect(1070, 920, 371, 91))
        self.pushButton.setStyleSheet("font: 36pt \"黑体\";")
        self.pushButton.setObjectName("pushButton")
        self.doubleSpinBox_tx = QtWidgets.QDoubleSpinBox(self.page)
        self.doubleSpinBox_tx.setGeometry(QtCore.QRect(430, 490, 131, 41))
        self.doubleSpinBox_tx.setStyleSheet("font: 14pt \"黑体\";")
        self.doubleSpinBox_tx.setObjectName("doubleSpinBox_tx")
        self.doubleSpinBox_qzl = QtWidgets.QDoubleSpinBox(self.page)
        self.doubleSpinBox_qzl.setGeometry(QtCore.QRect(300, 400, 131, 41))
        self.doubleSpinBox_qzl.setStyleSheet("font: 14pt \"黑体\";")
        self.doubleSpinBox_qzl.setObjectName("doubleSpinBox_qzl")
        self.doubleSpinBox_3 = QtWidgets.QDoubleSpinBox(self.page)
        self.doubleSpinBox_3.setGeometry(QtCore.QRect(970, 490, 131, 41))
        self.doubleSpinBox_3.setStyleSheet("font: 14pt \"黑体\";")
        self.doubleSpinBox_3.setObjectName("doubleSpinBox_3")
        self.label_4 = QtWidgets.QLabel(self.page)
        self.label_4.setGeometry(QtCore.QRect(100, 390, 191, 61))
        self.label_4.setStyleSheet("font: 18pt \"黑体\";")
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(self.page)
        self.label_5.setGeometry(QtCore.QRect(100, 480, 321, 61))
        self.label_5.setStyleSheet("font: 18pt \"黑体\";")
        self.label_5.setObjectName("label_5")
        self.label_6 = QtWidgets.QLabel(self.page)
        self.label_6.setGeometry(QtCore.QRect(640, 480, 311, 61))
        self.label_6.setStyleSheet("font: 18pt \"黑体\";")
        self.label_6.setObjectName("label_6")
        self.label_7 = QtWidgets.QLabel(self.page)
        self.label_7.setGeometry(QtCore.QRect(440, 390, 61, 61))
        self.label_7.setStyleSheet("font: 18pt \"黑体\";")
        self.label_7.setObjectName("label_7")
        self.stackedWidget.addWidget(self.page)
        self.page_3 = QtWidgets.QWidget()
        self.page_3.setObjectName("page_3")
        self.label_wcyt = QtWidgets.QLabel(self.page_3)
        self.label_wcyt.setGeometry(QtCore.QRect(130, 130, 551, 301))
        self.label_wcyt.setStyleSheet("")
        self.label_wcyt.setText("")
        self.label_wcyt.setObjectName("label_wcyt")
        self.label_hdt = QtWidgets.QLabel(self.page_3)
        self.label_hdt.setGeometry(QtCore.QRect(810, 130, 551, 301))
        self.label_hdt.setStyleSheet("")
        self.label_hdt.setText("")
        self.label_hdt.setObjectName("label_hdt")
        self.label_jphwct = QtWidgets.QLabel(self.page_3)
        self.label_jphwct.setGeometry(QtCore.QRect(130, 630, 551, 301))
        self.label_jphwct.setStyleSheet("")
        self.label_jphwct.setText("")
        self.label_jphwct.setObjectName("label_jphwct")
        self.label_qgqy = QtWidgets.QLabel(self.page_3)
        self.label_qgqy.setGeometry(QtCore.QRect(810, 630, 551, 301))
        self.label_qgqy.setStyleSheet("")
        self.label_qgqy.setText("")
        self.label_qgqy.setObjectName("label_qgqy")
        self.label_8 = QtWidgets.QLabel(self.page_3)
        self.label_8.setGeometry(QtCore.QRect(130, 60, 211, 51))
        self.label_8.setStyleSheet("font: 24pt \"黑体\";")
        self.label_8.setObjectName("label_8")
        self.label_9 = QtWidgets.QLabel(self.page_3)
        self.label_9.setGeometry(QtCore.QRect(810, 60, 211, 51))
        self.label_9.setStyleSheet("font: 24pt \"黑体\";")
        self.label_9.setObjectName("label_9")
        self.label_10 = QtWidgets.QLabel(self.page_3)
        self.label_10.setGeometry(QtCore.QRect(130, 560, 211, 51))
        self.label_10.setStyleSheet("font: 24pt \"黑体\";")
        self.label_10.setObjectName("label_10")
        self.label_11 = QtWidgets.QLabel(self.page_3)
        self.label_11.setGeometry(QtCore.QRect(810, 560, 211, 51))
        self.label_11.setStyleSheet("font: 24pt \"黑体\";")
        self.label_11.setObjectName("label_11")

        self.stackedWidget.addWidget(self.page_3)
        self.page_2 = QtWidgets.QWidget()
        self.page_2.setObjectName("page_2")
        self.label_3 = QtWidgets.QLabel(self.page_2)
        self.label_3.setGeometry(QtCore.QRect(0, 0, 1501, 1101))
        self.label_3.setText("")
        self.label_3.setObjectName("label_3")
        self.label_3.setAlignment(Qt.AlignCenter)
        self.label_3.setMouseTracking(True)
        self.stackedWidget.addWidget(self.page_2)
        self.label33 = QtWidgets.QLabel(self.page_2)
        self.label33.setStyleSheet("background-color:transparent;")  # 设置背景透明
        self.label33.setAttribute(Qt.WA_TranslucentBackground)  # 启用透明度特性
        self.label33.setFixedSize(300, 50)
        self.label33.setStyleSheet("font: 16pt \"黑体\";color:rgb(125,162,220);")
        self.label00 = QtWidgets.QLabel(self.page_2)
        self.label00.setStyleSheet("background-color:transparent;")  # 设置背景透明
        self.label00.setAttribute(Qt.WA_TranslucentBackground)  # 启用透明度特性
        self.label00.setFixedSize(300, 50)
        self.label00.setStyleSheet("font: 16pt \"黑体\";color:rgb(125,162,220);")
        self.label22 = QtWidgets.QLabel(self.page_2)
        self.label22.setStyleSheet("background-color:transparent;")  # 设置背景透明
        self.label22.setAttribute(Qt.WA_TranslucentBackground)  # 启用透明度特性
        self.label22.setFixedSize(300, 50)
        self.label22.setStyleSheet("font: 16pt \"黑体\";color:rgb(125,162,220);")


        self.listWidget = QtWidgets.QListWidget(self.centralwidget)
        self.listWidget.setGeometry(QtCore.QRect(1905, 1, 291, 1081))
        self.listWidget.setStyleSheet("font: 14pt \"黑体\";")
        self.listWidget.setObjectName("listWidget")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.stackedWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
       
        self.label11.setStyleSheet("font: 16pt \"黑体\";background-color:white;")
        self.pushButton_jiance.clicked.connect(lambda: self.stackedWidget.setCurrentIndex(0))
        self.pushButton_keshihua.clicked.connect(lambda: self.stackedWidget.setCurrentIndex(2))
        self.pushButton_zhongjian.clicked.connect(lambda: self.stackedWidget.setCurrentIndex(1))
        self.pushButton_2.clicked.connect(self.msg)
        self.pushButton_1.clicked.connect(self.msg2)
        self.pushButton.clicked.connect(self.Pushbutton4)
        self.pushButton_3.clicked.connect(self.msg3)
        self.listWidget.itemClicked.connect(self.show_image)
        self.listWidget.itemClicked.connect(self.Zhongjianjieguo)

    def msg(self):
        num = 0
        self.imgName, imgType = QtWidgets.QFileDialog.getOpenFileName(None, "导入图片", "./", "*.png;*.tif;")
        self.pushButton_5.setText(self.imgName)

        if self.imgName != "":
            item = QtWidgets.QListWidgetItem(self.imgName)
            self.listWidget.addItem(item)

        if self.imgName == "":
            return
        # 原始尺寸图片
        jpg = QtGui.QPixmap(self.imgName)
        # 图片宽度，高度
        self.width = jpg.width()
        self.height = jpg.height()
        #
        self.w_kong = (1900 - 400 - self.width) / 2
        self.h_kong = (1100 - self.height) / 2
        """# 控制台输出图片宽度和高度
        print(self.width, self.height)
        # 控制台输出label长度和宽度
        print(self.label_3.width(), self.label_3.height())
        # 将图片放置在label上
        self.label_3.setPixmap(jpg)"""

    def msg2(self):
        self.directory2 = QtWidgets.QFileDialog.getExistingDirectory(None, "选取文件夹", "C:/")
        self.pushButton_4.setText(self.directory2)

        # 根据选择的器件返回不同值函数

    def msg3(self):
        self.txtName, imgType = QtWidgets.QFileDialog.getOpenFileName(None, "导入图片", "./", "*.txt;")
        self.pushButton_6.setText(self.txtName)

        # 判断当前检测的器件

    def Comboxreturn(self):
        data = self.comboBox.currentText()
        if data == "LSR16C-1100-上冷板分组件-密封座":
            a = 0
        elif data == "LSR16C-1100-上冷板分组件-外围钎焊":
            a = 1
        elif data == "LSR16C-2000-下冷板分组件-外围钎焊":
            a = 2
        elif data == "IGBT散热器-正方形":
            a = 3
        elif data == "IGBT散热器-八角形":
            a = 4
        return a

        # 判断是否设置文件夹、导入图片  和  返回后台检测器件型号

    def Pushbutton4(self):
        if self.imgName == "" or self.directory2 == "" or self.txtName == "":
            msg_box = QtWidgets.QMessageBox(QtWidgets.QMessageBox.Information, '警告',
                                            '请先导入图片和txt文件或设置结果存放的文件夹！')  # Information可替换为Warning、Critical其他提示框类型
            msg_box.exec_()
        else:
            a = self.Comboxreturn()
            print(a)

    def show_image(self, item):
        image_path = item.text()
        pixmap = QtGui.QPixmap(image_path)
        self.label_3.setPixmap(pixmap)
        self.imgName = item.text()
        self.width = pixmap.width()
        self.height = pixmap.height()
        self.w_kong = (1900 - 400 - self.width) / 2
        self.h_kong = (1100 - self.height) / 2

    def Zhongjianjieguo(self, item):
        imagename = item.text()
        jpg_1 = QtGui.QPixmap(imagename)  # 伪彩原图
        jpg_2 = QtGui.QPixmap(imagename)  # 灰度图
        jpg_3 = QtGui.QPixmap(imagename)  # 纠偏后伪彩图
        jpg_4 = QtGui.QPixmap(imagename)  # 切割区域

        width_1 = jpg_1.width()
        height_1 = jpg_1.height()
        rate_1 = float(width_1 / height_1)  # 宽高比

        width_2 = jpg_2.width()
        height_2 = jpg_2.height()
        rate_2 = float(width_2 / height_2)

        width_3 = jpg_3.width()
        height_3 = jpg_3.height()
        rate_3 = float(width_3 / height_3)

        width_4 = jpg_4.width()
        height_4 = jpg_4.height()
        rate_4 = float(width_4 / height_4)

        rate_lab = float(self.label_wcyt.width() / self.label_wcyt.height())  # 宽高比
        # 伪彩原图
        if rate_lab > rate_1:
            jpg_1 = QtGui.QPixmap(imagename).scaled(
                self.label_wcyt.height() / height_1 * width_1, self.label_wcyt.height())
        else:
            jpg_1 = QtGui.QPixmap(imagename).scaled(self.label_wcyt.width(),
                                                    self.label_wcyt.width() / width_1 * height_1)
        # 灰度图
        if rate_lab > rate_2:
            jpg_2 = QtGui.QPixmap(imagename).scaled(
                self.label_wcyt.height() / height_2 * width_2, self.label_wcyt.height())
        else:
            jpg_2 = QtGui.QPixmap(imagename).scaled(self.label_wcyt.width(),
                                                    self.label_wcyt.width() / width_2 * height_2)
        # 纠偏后伪彩图
        if rate_lab > rate_3:
            jpg_3 = QtGui.QPixmap(imagename).scaled(
                self.label_wcyt.height() / height_3 * width_3, self.label_wcyt.height())
        else:
            jpg_3 = QtGui.QPixmap(imagename).scaled(self.label_wcyt.width(),
                                                    self.label_wcyt.width() / width_3 * height_3)
        # 切割区域
        if rate_lab > rate_4:
            jpg_4 = QtGui.QPixmap(imagename).scaled(
                self.label_wcyt.height() / height_4 * width_4, self.label_wcyt.height())
        else:
            jpg_4 = QtGui.QPixmap(imagename).scaled(self.label_wcyt.width(),
                                                    self.label_wcyt.width() / width_4 * height_4)

        self.label_wcyt.setPixmap(jpg_1)
        self.label_hdt.setPixmap(jpg_2)
        self.label_jphwct.setPixmap(jpg_3)
        self.label_qgqy.setPixmap(jpg_4)
